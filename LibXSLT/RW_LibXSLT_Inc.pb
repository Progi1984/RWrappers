; Documentation : 
  ; http://xmlsoft.org/XSLT/html/libxslt-lib.html
XIncludeFile "RW_LibXSLT_Res.pb"

;- Imports
;{
  ImportC "libxslt.lib"
    ;-attributes: Interface For the XSLT attribute handling
    xsltApplyAttributeSet(ctxt.l, node.l, inst.l, attrSets.l) As "_xsltApplyAttributeSet"
    xsltFreeAttributeSetsHashes(style.l) As "_xsltFreeAttributeSetsHashes"
    xsltParseStylesheetAttributeSet(style.l, cur.l) As "_xsltParseStylesheetAttributeSet"
    xsltResolveStylesheetAttributeSet(style.l) As "_xsltResolveStylesheetAttributeSet"
    ;-documents: Interface For the document handling
    xsltFindDocument(ctxt.l, doc.l) As "_xsltFindDocument"
    xsltFreeDocuments(ctxt.l) As "_xsltFreeDocuments"
    xsltFreeStyleDocuments(style.l) As "_xsltFreeStyleDocuments"
    xsltLoadDocument(ctxt.l, URI.l) As "_xsltLoadDocument"
    xsltLoadStyleDocument(ctxt.l, URI.l) As "_xsltLoadStyleDocument"
    xsltNewDocument(ctxt.l, doc.l) As "_xsltNewDocument"
    xsltNewStyleDocument(style.l, doc.l) As "_xsltNewStyleDocument"
    xsltSetLoaderFunc(f.l) As "_xsltSetLoaderFunc"
    ;-extensions: Interface For the extension support
    xsltCheckExtPrefix(style.l, URI.l) As "_xsltCheckExtPrefix"
    xsltDebugDumpExtensions(output.l) As "_xsltDebugDumpExtensions"
    xsltExtElementLookup(ctxt.l, name.l, URI.l) As "_xsltExtElementLookup"
    xsltExtModuleElementLookup(name.l, URI.l) As "_xsltExtModuleElementLookup"
    xsltExtModuleElementPreComputeLookup(name.l, URI.l) As "_xsltExtModuleElementPreComputeLookup"
    xsltExtModuleFunctionLookup(name.l, URI.l) As "_xsltExtModuleFunctionLookup"
    xsltExtModuleTopLevelLookup(name.l, URI.l) As "_xsltExtModuleTopLevelLookup"
    xsltFreeCtxtExts(ctxt.l) As "_xsltFreeCtxtExts"
    xsltFreeExts(style.l) As "_xsltFreeExts"
    xsltGetExtData(ctxt.l, URI.l) As "_xsltGetExtData"
    xsltGetExtInfo(style.l, URI.l) As "_xsltGetExtInfo"
    xsltInitCtxtExts(ctxt.l) As "_xsltInitCtxtExts"
    xsltInitElemPreComp(comp.l, style.l, inst.l, function.l, freeFunc.l) As "_xsltInitElemPreComp"
    xsltNewElemPreComp(style.l, inst.l, function.l) As "_xsltNewElemPreComp"
    xsltPreComputeExtModuleElement(style.l, inst.l) As "_xsltPreComputeExtModuleElement"
    xsltRegisterExtElement(ctxt.l, name.l, URI.l, function.l) As "_xsltRegisterExtElement"
    xsltRegisterExtFunction(ctxt.l, name.l, URI.l, function.l) As "_xsltRegisterExtFunction"
    xsltRegisterExtModule(URI.l, initFunc.l, shutdownFunc.l) As "_xsltRegisterExtModule"
    xsltRegisterExtModuleElement(name.l, URI.l, precomp.l, transform.l) As "_xsltRegisterExtModuleElement"
    xsltRegisterExtModuleFull(URI.l, initFunc.l, shutdownFunc.l, styleInitFunc.l, styleShutdownFunc.l) As "_xsltRegisterExtModuleFull"
    xsltRegisterExtModuleFunction(name.l, URI.l, function.l) As "_xsltRegisterExtModuleFunction"
    xsltRegisterExtModuleTopLevel(name.l, URI.l, function.l) As "_xsltRegisterExtModuleTopLevel"
    xsltRegisterExtPrefix(style.l, prefix.l, URI.l) As "_xsltRegisterExtPrefix"
    xsltRegisterTestModule() As "_xsltRegisterTestModule"
    xsltShutdownCtxtExts(ctxt.l) As "_xsltShutdownCtxtExts"
    xsltShutdownExts(style.l) As "_xsltShutdownExts"
    xsltStyleGetExtData(style.l, URI.l) As "_xsltStyleGetExtData"
    xsltUnregisterExtModule(URI.l) As "_xsltUnregisterExtModule"
    xsltUnregisterExtModuleElement(name.l, URI.l) As "_xsltUnregisterExtModuleElement"
    xsltUnregisterExtModuleFunction(name.l, URI.l) As "_xsltUnregisterExtModuleFunction"
    xsltUnregisterExtModuleTopLevel(name.l, URI.l) As "_xsltUnregisterExtModuleTopLevel"
    xsltXPathGetTransformContext(ctxt.l) As "_xsltXPathGetTransformContext"
    ;-extra: Interface For the non-standard features
    xsltDebug(ctxt.l, node.l, inst.l, comp.l) As "_xsltDebug"
    xsltFunctionNodeSet(ctxt.l, nargs.l) As "_xsltFunctionNodeSet"
    xsltRegisterAllExtras() As "_xsltRegisterAllExtras"
    xsltRegisterExtras(ctxt.l) As "_xsltRegisterExtras"
    ;-functions: Interface For the XSLT functions Not from XPath
    xsltDocumentFunction(ctxt.l, nargs.l) As "_xsltDocumentFunction"
    xsltElementAvailableFunction(ctxt.l, nargs.l) As "_xsltElementAvailableFunction"
    xsltFormatNumberFunction(ctxt.l, nargs.l) As "_xsltFormatNumberFunction"
    xsltFunctionAvailableFunction(ctxt.l, nargs.l) As "_xsltFunctionAvailableFunction"
    xsltGenerateIdFunction(ctxt.l, nargs.l) As "_xsltGenerateIdFunction"
    xsltKeyFunction(ctxt.l, nargs.l) As "_xsltKeyFunction"
    xsltRegisterAllFunctions(ctxt.l) As "_xsltRegisterAllFunctions"
    xsltSystemPropertyFunction(ctxt.l, nargs.l) As "_xsltSystemPropertyFunction"
    xsltUnparsedEntityURIFunction(ctxt.l, name.l, ns_uri.l) As "_xsltUnparsedEntityURIFunction"
    xsltXPathFunctionLookup(ctxt.l, nargs.l) As "_xsltXPathFunctionLookup"
    ;-imports: Interface For the XSLT Import support
    xsltFindElemSpaceHandling(ctxt.l, node.l) As "_xsltFindElemSpaceHandling"
    xsltFindTemplate(ctxt.l, name.l, nameURI.l) As "_xsltFindTemplate"
    xsltNeedElemSpaceHandling(ctxt.l) As "_xsltNeedElemSpaceHandling"
    xsltNextImport(cur.l) As "_xsltNextImport"
    xsltParseStylesheetImport(style.l, cur.l) As "_xsltParseStylesheetImport"
    xsltParseStylesheetInclude(style.l, cur.l) As "_xsltParseStylesheetInclude"
    ;-keys: Interface For the key matching used in key() And template matches.
    xsltAddKey(style.l, name.l, nameURI.l, match.l, use.l, inst.l) As "_xsltAddKey"
    xsltFreeDocumentKeys(idoc.l) As "_xsltFreeDocumentKeys"
    xsltFreeKeys(style.l) As "_xsltFreeKeys"
    xsltGetKey(ctxt.l, name.l, nameURI.l, value.l) As "_xsltGetKey"
    xsltInitCtxtKeys(ctxt.l, idoc.l) As "_xsltInitCtxtKeys"
    ;-namespaces: Interface For the XSLT namespace handling
    xsltCopyNamespace(ctxt.l, elem.l, ns.l) As "_xsltCopyNamespace"
    xsltCopyNamespaceList(ctxt.l, node.l, cur.l) As "_xsltCopyNamespaceList"
    xsltFreeNamespaceAliasHashes(style.l) As "_xsltFreeNamespaceAliasHashes"
    xsltGetNamespace(ctxt.l, cur.l, ns.l, out.l) As "_xsltGetNamespace"
    xsltGetPlainNamespace(ctxt.l, cur.l, ns.l, out.l) As "_xsltGetPlainNamespace"
    xsltGetSpecialNamespace(ctxt.l, invocNode.l, nsName.l, nsPrefix.l, target.l) As "_xsltGetSpecialNamespace"
    xsltNamespaceAlias(style.l, node.l) As "_xsltNamespaceAlias"
    ;-pattern: Interface For the pattern matching used in template matches.
    xsltAddTemplate(style.l, cur.l, mode.l, modeURI.l) As "_xsltAddTemplate"
    xsltCleanupTemplates(style.l) As "_xsltCleanupTemplates"
    xsltCompilePattern(pattern.l, doc.l, node.l, style.l, runtime.l) As "_xsltCompilePattern"
    xsltFreeCompMatchList(comp.l) As "_xsltFreeCompMatchList"
    xsltFreeTemplateHashes(style.l) As "_xsltFreeTemplateHashes"
    xsltGetTemplate(ctxt.l, node.l, style.l) As "_xsltGetTemplate"
    xsltNormalizeCompSteps(payload.l, data_.l, name.l) As "_xsltNormalizeCompSteps"
    xsltTestCompMatchList(ctxt.l, node.l, comp.l) As "_xsltTestCompMatchList"
    ;-preproc: precomputing stylesheets
    xsltDocumentComp(style.l, inst.l, function.l) As "_xsltDocumentComp"
    xsltFreeStylePreComps(style.l) As "_xsltFreeStylePreComps"
    xsltStylePreCompute(style.l, inst.l) As "_xsltStylePreCompute"
    ;-security: Interface For the libxslt security framework
    xsltCheckRead(sec.l, ctxt.l, URL.l) As "_xsltCheckRead"
    xsltCheckWrite(sec.l, ctxt.l, URL.l) As "_xsltCheckWrite"
    xsltFreeSecurityPrefs(sec.l) As "_xsltFreeSecurityPrefs"
    xsltGetDefaultSecurityPrefs() As "_xsltGetDefaultSecurityPrefs"
    xsltGetSecurityPrefs(sec.l, option.l) As "_xsltGetSecurityPrefs"
    xsltNewSecurityPrefs() As "_xsltNewSecurityPrefs"
    xsltSecurityAllow(sec.l, ctxt.l, value.l) As "_xsltSecurityAllow"
    xsltSecurityForbid(sec.l, ctxt.l, value.l) As "_xsltSecurityForbid"
    xsltSetCtxtSecurityPrefs(sec.l, ctxt.l) As "_xsltSetCtxtSecurityPrefs"
    xsltSetDefaultSecurityPrefs(sec.l) As "_xsltSetDefaultSecurityPrefs"
    xsltSetSecurityPrefs(sec.l, option.l, func.l) As "_xsltSetSecurityPrefs"
    ;-templates: Interface For the template processing
    xsltAttrListTemplateProcess(ctxt.l, target.l, attrs.l) As "_xsltAttrListTemplateProcess"
    xsltAttrTemplateProcess(ctxt.l, target.l, attr.l) As "_xsltAttrTemplateProcess"
    xsltAttrTemplateValueProcess(ctxt.l, str.l) As "_xsltAttrTemplateValueProcess"
    xsltAttrTemplateValueProcessNode(ctxt.l, str.l, inst.l) As "_xsltAttrTemplateValueProcessNode"
    xsltEvalAttrValueTemplate(ctxt.l, inst.l, name.l, ns.l) As "_xsltEvalAttrValueTemplate"
    xsltEvalStaticAttrValueTemplate(style.l, inst.l, name.l, ns.l, found.l) As "_xsltEvalStaticAttrValueTemplate"
    xsltEvalTemplateString(ctxt.l, contextNode.l, inst.l) As "_xsltEvalTemplateString"
    xsltEvalXPathPredicate(ctxt.l, comp.l, nsList.l, nsNr.l) As "_xsltEvalXPathPredicate"
    xsltEvalXPathString(ctxt.l, comp.l) As "_xsltEvalXPathString"
    xsltEvalXPathStringNs(ctxt.l, comp.l, nsNr.l, nsList.l) As "_xsltEvalXPathStringNs"
    xsltTemplateProcess(ctxt.l, node.l) As "_xsltTemplateProcess"
    ;-transform: the XSLT engine transformation part.
    xslHandleDebugger(cur.l, node.l, templ.l, ctxt.l) As "_xslHandleDebugger"
    xsltApplyImports(ctxt.l, contextNode.l, inst.l, comp.l) As "_xsltApplyImports"
    xsltApplyOneTemplate(ctxt.l, contextNode.l, list.l, templ.l, params.l) As "_xsltApplyOneTemplate"
    xsltApplyStripSpaces(ctxt.l, node.l) As "_xsltApplyStripSpaces"
    xsltApplyStylesheet(style.l, doc.l, params.l) As "_xsltApplyStylesheet"
    xsltApplyStylesheetUser(style.l, doc.l, params.l, output.l, profile.l, userCtxt.l) As "_xsltApplyStylesheetUser"
    xsltApplyTemplates(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltApplyTemplates"
    xsltAttribute(ctxt.l, node.l, inst.l, comp.l) As "_xsltAttribute"
    xsltCallTemplate(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltCallTemplate"
    xsltChoose(ctxt.l, contextNode.l, inst.l, comp.l) As "_xsltChoose"
    xsltComment(ctxt.l, node.l, inst.l, comp.l) As "_xsltComment"
    xsltCopy(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltCopy"
    xsltCopyOf(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltCopyOf"
    xsltCopyTextString(ctxt.l, target.l, string.l, noescape.l) As "_xsltCopyTextString"
    xsltDocumentElem(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltDocumentElem"
    xsltElement(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltElement"
    xsltForEach(ctxt.l, contextNode.l, inst.l, castedComp.l) As "_xsltForEach"
    xsltFreeTransformContext(ctxt.l) As "_xsltFreeTransformContext"
    xsltGetXIncludeDefault() As "_xsltGetXIncludeDefault"
    xsltIf(ctxt.l, contextNode.l, inst.l, castedComp.l) As "_xsltIf"
    xsltLocalVariablePop(ctxt.l, limitNr.l, level.l) As "_xsltLocalVariablePop"
    xsltLocalVariablePush(ctxt.l, variable.l, level.l) As "_xsltLocalVariablePush"
    xsltNewTransformContext(style.l, doc.l) As "_xsltNewTransformContext"
    xsltNumber(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltNumber"
    xsltProcessingInstruction(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltProcessingInstruction"
    xsltProfileStylesheet(style.l, doc.l, params.l, output.l) As "_xsltProfileStylesheet"
    xsltRegisterAllElement(ctxt.l) As "_xsltRegisterAllElement"
    xsltRunStylesheet(style.l, doc.l, params.l, output.l, SAX.l, IObuf.l) As "_xsltRunStylesheet"
    xsltRunStylesheetUser(style.l, doc.l, params.l, output.l, SAX.l, IObuf.l, profile.l, userCtxt.l) As "_xsltRunStylesheetUser"
    xsltSetXIncludeDefault(xinclude.l) As "_xsltSetXIncludeDefault"
    xsltSort(ctxt.l, node.l, inst.l, comp.l) As "_xsltSort"
    xsltText(ctxt.l, node.l, inst.l, comp.l) As "_xsltText"
    xsltValueOf(ctxt.l, node.l, inst.l, castedComp.l) As "_xsltValueOf"
    ;-variables: Interface For the variable matching And lookup.
    xsltAddStackElemList(ctxt.l, elems.l) As "_xsltAddStackElemList"
    xsltEvalGlobalVariables(ctxt.l) As "_xsltEvalGlobalVariables"
    xsltEvalOneUserParam(ctxt.l, name.l, value.l) As "_xsltEvalOneUserParam"
    xsltEvalUserParams(ctxt.l, params.l) As "_xsltEvalUserParams"
    xsltFreeGlobalVariables(ctxt.l) As "_xsltFreeGlobalVariables"
    xsltParseGlobalParam(style.l, cur.l) As "_xsltParseGlobalParam"
    xsltParseGlobalVariable(style.l, cur.l) As "_xsltParseGlobalVariable"
    xsltParseStylesheetCallerParam(ctxt.l, inst.l) As "_xsltParseStylesheetCallerParam"
    xsltParseStylesheetParam(ctxt.l, cur.l) As "_xsltParseStylesheetParam"
    xsltParseStylesheetVariable(ctxt.l, inst.l) As "_xsltParseStylesheetVariable"
    xsltQuoteOneUserParam(ctxt.l, name.l, value.l) As "_xsltQuoteOneUserParam"
    xsltQuoteUserParams(ctxt.l, params.l) As "_xsltQuoteUserParams"
    xsltVariableLookup(ctxt.l, name.l, ns_uri.l) As "_xsltVariableLookup"
    xsltXPathVariableLookup(ctxt.l, name.l, ns_uri.l) As "_xsltXPathVariableLookup"
    ;-xslt: Interfaces, constants And types related To the XSLT engine
    xsltCleanupGlobals() As "_xsltCleanupGlobals"
    xsltInit() As "_xsltInit"
    ;-xsltInternals: internal Data structures, constants And functions
    xsltAllocateExtra(style.l) As "_xsltAllocateExtra"
    xsltAllocateExtraCtxt(ctxt.l) As "_xsltAllocateExtraCtxt"
    xsltCompileAttr(style.l, attr.l) As "_xsltCompileAttr"
    xsltCreateRVT(ctxt.l) As "_xsltCreateRVT"
    xsltDecimalFormatGetByName(style.l, name.l) As "_xsltDecimalFormatGetByName"
    xsltEvalAVT(ctxt.l, avt.l, node.l) As "_xsltEvalAVT"
    xsltExtensionInstructionResultFinalize(ctxt.l) As "_xsltExtensionInstructionResultFinalize"
    xsltExtensionInstructionResultRegister(ctxt.l, obj.l) As "_xsltExtensionInstructionResultRegister"
    xsltFormatNumberConversion(self.l, format.l, number.d, result.l) As "_xsltFormatNumberConversion"
    xsltFreeAVTList(avt.l) As "_xsltFreeAVTList"
    xsltFreeRVTs(ctxt.l) As "_xsltFreeRVTs"
    xsltFreeStackElemList(elem.l) As "_xsltFreeStackElemList"
    xsltFreeStylesheet(style.l) As "_xsltFreeStylesheet"
    xsltInitCtxtKey(ctxt.l, idoc.l, keyDef.l) As "_xsltInitCtxtKey"
    xsltIsBlank(str.l) As "_xsltIsBlank"
    xsltLoadStylesheetPI(doc.l) As "_xsltLoadStylesheetPI"
    xsltNewStylesheet() As "_xsltNewStylesheet"
    xsltNumberFormat(ctxt.l, data_.l, node.l) As "_xsltNumberFormat"
    xsltParseStylesheetDoc(doc.l) As "_xsltParseStylesheetDoc"
    xsltParseStylesheetFile(filename.l) As "_xsltParseStylesheetFile"
    xsltParseStylesheetImportedDoc(doc.l, parentStyle.l) As "_xsltParseStylesheetImportedDoc"
    xsltParseStylesheetOutput(style.l, cur.l) As "_xsltParseStylesheetOutput"
    xsltParseStylesheetProcess(ret.l, doc.l) As "_xsltParseStylesheetProcess"
    xsltParseTemplateContent(style.l, templ.l) As "_xsltParseTemplateContent"
    xsltRegisterLocalRVT(ctxt.l, RVT.l) As "_xsltRegisterLocalRVT"
    xsltRegisterPersistRVT(ctxt.l, RVT.l) As "_xsltRegisterPersistRVT"
    xsltRegisterTmpRVT(ctxt.l, RVT.l) As "_xsltRegisterTmpRVT"
    xsltReleaseRVT(ctxt.l, RVT.l) As "_xsltReleaseRVT"
    xsltUninit() As "_xsltUninit"
    ;-xsltutils: set of utilities For the XSLT engine
    xslAddCall(templ.l, source.l) As "_xslAddCall"
    xslDropCall() As "_xslDropCall"
    xsltCalibrateAdjust(delta.l) As "_xsltCalibrateAdjust"
    xsltComputeSortResult(ctxt.l, sort.l) As "_xsltComputeSortResult"
    xsltDebugGetDefaultTrace() As "_xsltDebugGetDefaultTrace"
    xsltDebugSetDefaultTrace(val.l) As "_xsltDebugSetDefaultTrace"
    xsltDefaultSortFunction(ctxt.l, sorts.l, nbsorts.l) As "_xsltDefaultSortFunction"
    xsltDoSortFunction(ctxt.l, sorts.l, nbsorts.l) As "_xsltDoSortFunction"
    xsltDocumentSortFunction(list.l) As "_xsltDocumentSortFunction"
    xsltGetCNsProp(style.l, node.l, name.l, nameSpace.l) As "_xsltGetCNsProp"
    xsltGetDebuggerStatus() As "_xsltGetDebuggerStatus"
    xsltGetNsProp(node.l, name.l, nameSpace.l) As "_xsltGetNsProp"
    xsltGetProfileInformation(ctxt.l) As "_xsltGetProfileInformation"
    xsltGetQNameURI(node.l, name.l) As "_xsltGetQNameURI"
    xsltGetQNameURI2(style.l, node.l, name.l) As "_xsltGetQNameURI2"
    xsltGetUTF8Char(utf.l, len.l) As "_xsltGetUTF8Char"
    xsltMessage(ctxt.l, node.l, inst.l) As "_xsltMessage"
    xsltPrintErrorContext(ctxt.l, style.l, node.l) As "_xsltPrintErrorContext"
    xsltSaveProfiling(ctxt.l, output.l) As "_xsltSaveProfiling"
    xsltSaveResultTo(buf.l, result.l, style.l) As "_xsltSaveResultTo"
    xsltSaveResultToFd(fd.l, result.l, style.l) As "_xsltSaveResultToFd"
    xsltSaveResultToFile(file.l, result.l, style.l) As "_xsltSaveResultToFile"
    xsltSaveResultToFilename(URL.l, result.l, style.l, compression.l) As "_xsltSaveResultToFilename"
    xsltSaveResultToString(doc_txt_ptr.l, doc_txt_len.l, result.l, style.l) As "_xsltSaveResultToString"
    xsltSetCtxtParseOptions(ctxt.l, options.l) As "_xsltSetCtxtParseOptions"
    xsltSetCtxtSortFunc(ctxt.l, handler.l) As "_xsltSetCtxtSortFunc"
    xsltSetDebuggerCallbacks(no.l, blocks.l) As "_xsltSetDebuggerCallbacks"
    xsltSetDebuggerStatus(value.l) As "_xsltSetDebuggerStatus"
    xsltSetGenericDebugFunc(ctxt.l, handler.l) As "_xsltSetGenericDebugFunc"
    xsltSetGenericErrorFunc(ctxt.l, handler.l) As "_xsltSetGenericErrorFunc"
    xsltSetSortFunc(handler.l) As "_xsltSetSortFunc"
    xsltSetTransformErrorFunc(ctxt.l, ctx.l, handler.l) As "_xsltSetTransformErrorFunc"
    xsltSplitQName(dict.l, name.l, prefix.l) As "_xsltSplitQName"
    xsltTimestamp() As "_xsltTimestamp"
    xsltTransformError(ctxt.l, style.l, node.l, msg.l) As "_xsltTransformError"
    xsltXPathCompile(style.l, str.l) As "_xsltXPathCompile"
  EndImport
;}

; IDE Options = PureBasic 4.10 (Windows - x86)
; CursorPosition = 2
; Folding = +