XIncludeFile "RW_Cairo_Res.pb"
ImportC "cairo.lib"
  cairo_append_path(*cr.cairo_t, *path.cairo_path_t) As "_cairo_append_path"
  cairo_arc(*cr.cairo_t, xc.d, yc.d, radius.d, angle1.d, angle2.d) As "_cairo_arc"
  cairo_arc_negative(*cr.cairo_t, xc.d, yc.d, radius.d, angle1.d, angle2.d) As "_cairo_arc_negative"
  cairo_clip(*cr.cairo_t) As "_cairo_clip"
  cairo_clip_extents(*cr.cairo_t, *x1.d, *y1.d, *x2.d, *y2.d) As "_cairo_clip_extents"
  cairo_clip_preserve(*cr.cairo_t) As "_cairo_clip_preserve"
  cairo_close_path(*cr.cairo_t) As "_cairo_close_path"
  cairo_copy_clip_rectangle_list(*cr.cairo_t) As "_cairo_copy_clip_rectangle_list"
  cairo_copy_page(*cr.cairo_t) As "_cairo_copy_page"
  cairo_copy_path(*cr.cairo_t) As "_cairo_copy_path"
  cairo_copy_path_flat(*cr.cairo_t) As "_cairo_copy_path_flat"
  cairo_create(*target.cairo_surface_t) As "_cairo_create"
  cairo_curve_to(*cr.cairo_t, x1.d, y1.d, x2.d, y2.d, x3.d, y3.d) As "_cairo_curve_to"
  cairo_debug_reset_static_data() As "_cairo_debug_reset_static_data"
  cairo_destroy(*cr.cairo_t) As "_cairo_destroy"
  cairo_device_to_user(*cr.cairo_t, *x.d, *y.d) As "_cairo_device_to_user"
  cairo_device_to_user_distance(*cr.cairo_t, *dx.d, *dy.d) As "_cairo_device_to_user_distance"
  cairo_fill(*cr.cairo_t) As "_cairo_fill"
  cairo_fill_extents(*cr.cairo_t, *x1.d, *y1.d, *x2.d, *y2.d) As "_cairo_fill_extents"
  cairo_fill_preserve(*cr.cairo_t) As "_cairo_fill_preserve"
  cairo_font_extents(*cr.cairo_t, *extents.cairo_text_extents_t) As "_cairo_font_extents"
  cairo_font_face_destroy(*font_face.cairo_font_face_t) As "_cairo_font_face_destroy"
  cairo_font_face_get_reference_count(*font_face.cairo_font_face_t) As "_cairo_font_face_get_reference_count"
  cairo_font_face_get_type(*font_face.cairo_font_face_t) As "_cairo_font_face_get_type"
  cairo_font_face_get_user_data(*font_face.cairo_font_face_t, *key.cairo_user_data_key_t) As "_cairo_font_face_get_user_data"
  cairo_font_face_reference(*font_face.cairo_font_face_t) As "_cairo_font_face_reference"
  cairo_font_face_set_user_data(*font_face.cairo_font_face_t,*key.cairo_user_data_key_t, *user_data, *destroy_fn) As "_cairo_font_face_set_user_data"
  ; *destroy_fn.cairo_destroy_func_t
  
  cairo_font_face_status(*font_face.cairo_font_face_t) As "_cairo_font_face_status"
  cairo_font_options_copy(*original.cairo_font_options_t) As "_cairo_font_options_copy"
  cairo_font_options_create() As "_cairo_font_options_create"
  cairo_font_options_destroy(*original.cairo_font_options_t) As "_cairo_font_options_destroy"
  cairo_font_options_equal(*options.cairo_font_options_t, *other.cairo_font_options_t) As "_cairo_font_options_equal"
  cairo_font_options_get_antialias(*options.cairo_font_options_t) As "_cairo_font_options_get_antialias"
  cairo_font_options_get_hint_metrics(*options.cairo_font_options_t) As "_cairo_font_options_get_hint_metrics"
  cairo_font_options_get_hint_style(*options.cairo_font_options_t) As "_cairo_font_options_get_hint_style"
  cairo_font_options_get_subpixel_order(*options.cairo_font_options_t) As "_cairo_font_options_get_subpixel_order"
  cairo_font_options_hash(*options.cairo_font_options_t, *other.cairo_font_options_t) As "_cairo_font_options_hash"
  cairo_font_options_merge(*options.cairo_font_options_t) As "_cairo_font_options_merge"
  cairo_font_options_set_antialias(*options.cairo_font_options_t, antialias.cairo_antialias_t) As "_cairo_font_options_set_antialias"
  cairo_font_options_set_hint_metrics(*options.cairo_font_options_t, hint_metrics.cairo_hint_metrics_t) As "_cairo_font_options_set_hint_metrics"
  cairo_font_options_set_hint_style(*options.cairo_font_options_t, hint_style.cairo_hint_style_t) As "_cairo_font_options_set_hint_style"
  cairo_font_options_set_subpixel_order(*options.cairo_font_options_t, subpixel_order.cairo_subpixel_order_t) As "_cairo_font_options_set_subpixel_order"
  cairo_font_options_status(*original.cairo_font_options_t) As "_cairo_font_options_status"
  cairo_format_stride_for_width(format.cairo_format_t, width.l) As "_cairo_format_stride_for_width"
  cairo_get_antialias(*cr.cairo_t) As "_cairo_get_antialias"
  cairo_get_current_point(*cr.cairo_t, *x.d, *y.d) As "_cairo_get_current_point"
  cairo_get_dash(*cr.cairo_t, *dashes.d, *offset.d) As "_cairo_get_dash"
  cairo_get_dash_count(*cr.cairo_t) As "_cairo_get_dash_count"
  cairo_get_fill_rule(*cr.cairo_t) As "_cairo_get_fill_rule"
  cairo_get_font_face(*cr.cairo_t) As "_cairo_get_font_face"
  cairo_get_font_matrix(*cr.cairo_t, *matrix.cairo_matrix_t) As "_cairo_get_font_matrix"
  cairo_get_font_options(*cr.cairo_t, *options.cairo_font_options_t) As "_cairo_get_font_options"
  cairo_get_group_target(*cr.cairo_t) As "_cairo_get_group_target"
  cairo_get_line_cap(*cr.cairo_t) As "_cairo_get_line_cap"
  cairo_get_line_join(*cr.cairo_t) As "_cairo_get_line_join"
  cairo_get_line_width(*cr.cairo_t) As "_cairo_get_line_width"
  cairo_get_matrix(*cr.cairo_t, *matrix.cairo_matrix_t) As "_cairo_get_matrix"
  cairo_get_miter_limit(*cr.cairo_t) As "_cairo_get_miter_limit"
  cairo_get_operator(*cr.cairo_t) As "_cairo_get_operator"
  cairo_get_reference_count(*cr.cairo_t) As "_cairo_get_reference_count"
  cairo_get_scaled_font(*cr.cairo_t) As "_cairo_get_scaled_font"
  cairo_get_source(*cr.cairo_t) As "_cairo_get_source"
  cairo_get_target(*cr.cairo_t) As "_cairo_get_target"
  cairo_get_tolerance(*cr.cairo_t) As "_cairo_get_tolerance"
  cairo_get_user_data(*cr.cairo_t, *key.cairo_user_data_key_t) As "_cairo_get_user_data"
  cairo_glyph_allocate(num_glyphs.l) As "_cairo_glyph_allocate"
  cairo_glyph_extents(*cr.cairo_t, *glyphs.cairo_glyph_t, num_glyphs.l, *extents.cairo_text_extents_t) As "_cairo_glyph_extents"
  cairo_glyph_free(*glyphs.cairo_glyph_t) As "_cairo_glyph_free"
  cairo_glyph_path(*cr.cairo_t, *glyphs.cairo_glyph_t, num_glyphs.l) As "_cairo_glyph_path"
  cairo_has_current_point(*cr.cairo_t) As "_cairo_has_current_point"
  cairo_identity_matrix(*cr.cairo_t) As "_cairo_identity_matrix"
  cairo_image_surface_create(format.cairo_format_t, width.l, height.l) As "_cairo_image_surface_create"
  cairo_image_surface_create_for_data(*data_, format.cairo_format_t, width.l, height.l, stride.l) As "_cairo_image_surface_create_for_data"
  CompilerIf #CAIRO_HAS_PNG_FUNCTIONS = #True
    cairo_image_surface_create_from_png(filename.s) As "_cairo_image_surface_create_from_png"
    cairo_image_surface_create_from_png_stream(*read_func, *closure) As "_cairo_image_surface_create_from_png_stream"
    ; *read_func.cairo_read_func_t
  CompilerEndIf
  cairo_image_surface_get_data(*surface.cairo_surface_t) As "_cairo_image_surface_get_data"
  cairo_image_surface_get_format(*surface.cairo_surface_t) As "_cairo_image_surface_get_format"
  cairo_image_surface_get_height(*surface.cairo_surface_t) As "_cairo_image_surface_get_height"
  cairo_image_surface_get_stride(*surface.cairo_surface_t) As "_cairo_image_surface_get_stride"
  cairo_image_surface_get_width(*surface.cairo_surface_t) As "_cairo_image_surface_get_width"
  cairo_in_fill(*cr.cairo_t, x.d, y.d) As "_cairo_in_fill"
  cairo_in_stroke(*cr.cairo_t, x.d, y.d) As "_cairo_in_stroke"
  cairo_line_to(*cr.cairo_t, x.d, y.d) As "_cairo_line_to"
  cairo_mask(*cr.cairo_t, *pattern.cairo_pattern_t) As "_cairo_mask"
  cairo_mask_surface(*cr.cairo_t, *surface.cairo_surface_t, surface_x.d, surface_y.d) As "_cairo_mask_surface"
  cairo_matrix_init(*matrix.cairo_matrix_t , xx.d, yx.d, xy.d, yy.d, x0.d, y0.d) As "_cairo_matrix_init"
  cairo_matrix_init_identity(*matrix.cairo_matrix_t) As "_cairo_matrix_init_identity"
  cairo_matrix_init_rotate(*matrix.cairo_matrix_t , radians.d) As "_cairo_matrix_init_rotate"
  cairo_matrix_init_scale(*matrix.cairo_matrix_t , sx.d, sy.d) As "_cairo_matrix_init_scale"
  cairo_matrix_init_translate(*matrix.cairo_matrix_t , tx.d, ty.d) As "_cairo_matrix_init_translate"
  cairo_matrix_invert(*matrix.cairo_matrix_t) As "_cairo_matrix_invert"
  cairo_matrix_multiply(*result.cairo_matrix_t, *a.cairo_matrix_t, *b.cairo_matrix_t) As "_cairo_matrix_multiply"
  cairo_matrix_rotate(*matrix.cairo_matrix_t , radians.d) As "_cairo_matrix_rotate"
  cairo_matrix_scale(*matrix.cairo_matrix_t , sx.d, sy.d) As "_cairo_matrix_scale"
  cairo_matrix_transform_distance(*matrix.cairo_matrix_t , *dx.d, *dy.d) As "_cairo_matrix_transform_distance"
  cairo_matrix_transform_point(*matrix.cairo_matrix_t , *x.d, *y.d) As "_cairo_matrix_transform_point"
  cairo_matrix_translate(*matrix.cairo_matrix_t , tx.d, ty.d) As "_cairo_matrix_translate"
  cairo_move_to(*cr.cairo_t, x.d, y.d) As "_cairo_move_to"
  cairo_new_path(*cr.cairo_t) As "_cairo_new_path"
  cairo_new_sub_path(*cr.cairo_t) As "_cairo_new_sub_path"
  cairo_paint(*cr.cairo_t) As "_cairo_paint"
  cairo_paint_with_alpha(*cr.cairo_t, alpha.d) As "_cairo_paint_with_alpha"
  cairo_path_destroy(*path.cairo_path_t) As "_cairo_path_destroy"
  cairo_path_extents(*cr.cairo_t, *x1.d, *y1.d, *x2.d, *y2.d) As "_cairo_path_extents"
  cairo_pattern_add_color_stop_rgb(*pattern.cairo_pattern_t, offset.d, red.d, green.d, blue.d) As "_cairo_pattern_add_color_stop_rgb"
  cairo_pattern_add_color_stop_rgba(*pattern.cairo_pattern_t, offset.d, red.d, green.d, blue.d, alpha.d) As "_cairo_pattern_add_color_stop_rgba"
  cairo_pattern_create_for_surface(*surface.cairo_surface_t) As "_cairo_pattern_create_for_surface"
  cairo_pattern_create_linear(x0.d, y0.d, x1.d, y1.d) As "_cairo_pattern_create_linear"
  cairo_pattern_create_radial(cx0.d, cy0.d, radius0.d, cx1.d, cy1.d, radius1.d) As "_cairo_pattern_create_radial"
  cairo_pattern_create_rgb(red.d, green.d, blue.d) As "_cairo_pattern_create_rgb"
  cairo_pattern_create_rgba(red.d, green.d, blue.d, alpha.d) As "_cairo_pattern_create_rgba"
  cairo_pattern_destroy(*pattern.cairo_pattern_t) As "_cairo_pattern_destroy"
  cairo_pattern_get_color_stop_count(*pattern.cairo_pattern_t, *count.l) As "_cairo_pattern_get_color_stop_count"
  cairo_pattern_get_color_stop_rgba(*pattern.cairo_pattern_t, index.l, *offset.d, *red.d, *green.d, *blue.d, *alpha.d) As "_cairo_pattern_get_color_stop_rgba"
  cairo_pattern_get_extend(*pattern.cairo_pattern_t) As "_cairo_pattern_get_extend"
  cairo_pattern_get_filter(*pattern.cairo_pattern_t) As "_cairo_pattern_get_filter"
  cairo_pattern_get_linear_points(*pattern.cairo_pattern_t, *x0.d, *y0.d, *x1.d, *y1.d) As "_cairo_pattern_get_linear_points"
  cairo_pattern_get_matrix(*pattern.cairo_pattern_t, *matrix.cairo_matrix_t) As "_cairo_pattern_get_matrix"
  cairo_pattern_get_radial_circles(*pattern.cairo_pattern_t, *x0.d, *y0.d, *r0.d, *x1.d, *y1.d, *r1.d) As "_cairo_pattern_get_radial_circles"
  cairo_pattern_get_reference_count(*pattern.cairo_pattern_t) As "_cairo_pattern_get_reference_count"
  cairo_pattern_get_rgba(*pattern.cairo_pattern_t, *red.d, *green.d, *blue.d, *alpha.d) As "_cairo_pattern_get_rgba"
  cairo_pattern_get_surface(*pattern.cairo_pattern_t, *surface.cairo_surface_t) As "_cairo_pattern_get_surface"
  cairo_pattern_get_type(*pattern.cairo_pattern_t) As "_cairo_pattern_get_type"
  cairo_pattern_get_user_data(*pattern.cairo_pattern_t, *key.cairo_user_data_key_t) As "_cairo_pattern_get_user_data"
  cairo_pattern_reference(*pattern.cairo_pattern_t) As "_cairo_pattern_reference"
  cairo_pattern_set_extend(*pattern.cairo_pattern_t, extend.cairo_extend_t) As "_cairo_pattern_set_extend"
  cairo_pattern_set_filter(*pattern.cairo_pattern_t, filter.cairo_filter_t) As "_cairo_pattern_set_filter"
  cairo_pattern_set_matrix(*pattern.cairo_pattern_t, *matrix.cairo_matrix_t) As "_cairo_pattern_set_matrix"
  cairo_pattern_set_user_data(*pattern.cairo_pattern_t, *key.cairo_user_data_key_t, *user_data, *destroy_fn) As "_cairo_pattern_set_user_data"
  ; *destroy_fn.cairo_destroy_func_t
  cairo_pattern_status(*pattern.cairo_pattern_t) As "_cairo_pattern_status"
  cairo_pdf_surface_create(filename.s, width_in_points.d, height_in_points.d) As "_cairo_pdf_surface_create"
  cairo_pdf_surface_create_for_stream(*write_func, *closure, width_in_points.d, height_in_points.d) As "_cairo_pdf_surface_create_for_stream"
  ; *write_func.cairo_write_func_t
  cairo_pdf_surface_set_size(*surface.cairo_surface_t, width_in_points.d, height_in_points.d) As "_cairo_pdf_surface_set_size"
  cairo_pop_group(*cr.cairo_t) As "_cairo_pop_group"
  cairo_pop_group_to_source(*cr.cairo_t) As "_cairo_pop_group_to_source"
  cairo_ps_get_levels(*levels.cairo_ps_level_t, *num_levels.l) As "_cairo_ps_get_levels"
  cairo_ps_level_to_string(level.cairo_ps_level_t) As "_cairo_ps_level_to_string"
  cairo_ps_surface_create(filename.s, width_in_points.d, height_in_points.d) As "_cairo_ps_surface_create"
  cairo_ps_surface_create_for_stream(*write_func, *closure, width_in_points.d, height_in_points.d) As "_cairo_ps_surface_create_for_stream"
  ; *write_func.cairo_write_func_t
  cairo_ps_surface_dsc_begin_page_setup(*surface.cairo_surface_t) As "_cairo_ps_surface_dsc_begin_page_setup"
  cairo_ps_surface_dsc_begin_setup(*surface.cairo_surface_t) As "_cairo_ps_surface_dsc_begin_setup"
  cairo_ps_surface_dsc_comment(*surface.cairo_surface_t, comment.s) As "_cairo_ps_surface_dsc_comment"
  cairo_ps_surface_get_eps(*surface.cairo_surface_t) As "_cairo_ps_surface_get_eps"
  cairo_ps_surface_restrict_to_level(*surface.cairo_surface_t, level.cairo_ps_level_t) As "_cairo_ps_surface_restrict_to_level"
  cairo_ps_surface_set_eps(*surface.cairo_surface_t, eps.cairo_bool_t) As "_cairo_ps_surface_set_eps"
  cairo_ps_surface_set_size(*surface.cairo_surface_t, width_in_points.d, height_in_points.d) As "_cairo_ps_surface_set_size"
  cairo_push_group(*cr.cairo_t) As "_cairo_push_group"
  cairo_push_group_with_content(*cr.cairo_t, content.cairo_content_t) As "_cairo_push_group_with_content"
  cairo_rectangle(*cr.cairo_t, x.d, y.d, width.d, height.d) As "_cairo_rectangle"
  cairo_rectangle_list_destroy(*rectangle_list.cairo_rectangle_list_t) As "_cairo_rectangle_list_destroy"
  cairo_reference(*cr.cairo_t) As "_cairo_reference"
  cairo_rel_curve_to(*cr.cairo_t, dx1.d, dy1.d, dx2.d, dy2.d, dx3.d, dy3.d) As "_cairo_rel_curve_to"
  cairo_rel_line_to(*cr.cairo_t, dx.d, dy.d) As "_cairo_rel_line_to"
  cairo_rel_move_to(*cr.cairo_t, dx.d, dy.d) As "_cairo_rel_move_to"
  cairo_reset_clip(*cr.cairo_t) As "_cairo_reset_clip"
  cairo_restore(*cr.cairo_t) As "_cairo_restore"
  cairo_rotate(*cr.cairo_t, angle.d) As "_cairo_rotate"
  cairo_save(*cr.cairo_t) As "_cairo_save"
  cairo_scale(*cr.cairo_t, sx.d, sy.d) As "_cairo_scale"
  cairo_scaled_font_create(*font_face.cairo_font_face_t, *font_matrix.cairo_matrix_t, *ctm.cairo_matrix_t, *options.cairo_font_options_t) As "_cairo_scaled_font_create"
  cairo_scaled_font_destroy(*scaled_font.cairo_scaled_font_t) As "_cairo_scaled_font_destroy"
  cairo_scaled_font_extents(*scaled_font.cairo_scaled_font_t, *extents.cairo_font_extents_t) As "_cairo_scaled_font_extents"
  cairo_scaled_font_get_ctm(*scaled_font.cairo_scaled_font_t, *ctm.cairo_matrix_t) As "_cairo_scaled_font_get_ctm"
  cairo_scaled_font_get_font_face(*scaled_font.cairo_scaled_font_t) As "_cairo_scaled_font_get_font_face"
  cairo_scaled_font_get_font_matrix(*scaled_font.cairo_scaled_font_t, *font_matrix.cairo_matrix_t) As "_cairo_scaled_font_get_font_matrix"
  cairo_scaled_font_get_font_options(*scaled_font.cairo_scaled_font_t, *options.cairo_font_options_t) As "_cairo_scaled_font_get_font_options"
  cairo_scaled_font_get_reference_count(*scaled_font.cairo_scaled_font_t) As "_cairo_scaled_font_get_reference_count"
  cairo_scaled_font_get_scale_matrix(*scaled_font.cairo_scaled_font_t, *scale_matrix.cairo_matrix_t) As "_cairo_scaled_font_get_scale_matrix"
  cairo_scaled_font_get_type(*scaled_font.cairo_scaled_font_t) As "_cairo_scaled_font_get_type"
  cairo_scaled_font_get_user_data(*scaled_font.cairo_scaled_font_t, *key.cairo_user_data_key_t) As "_cairo_scaled_font_get_user_data"
  cairo_scaled_font_glyph_extents(*scaled_font.cairo_scaled_font_t, *glyphs.cairo_glyph_t, num_glyphs.l, *extents.cairo_font_extents_t) As "_cairo_scaled_font_glyph_extents"
  cairo_scaled_font_reference(*scaled_font.cairo_scaled_font_t) As "_cairo_scaled_font_reference"
  cairo_scaled_font_set_user_data(*scaled_font.cairo_scaled_font_t, *key.cairo_user_data_key_t, *user_data, *destroy_fn) As "_cairo_scaled_font_set_user_data"
  ; *destroy_fn.cairo_destroy_func_t
  cairo_scaled_font_status(*scaled_font.cairo_scaled_font_t) As "_cairo_scaled_font_status"
  cairo_scaled_font_text_extents(*scaled_font.cairo_scaled_font_t, utf8.p-utf8, *extents.cairo_text_extents_t) As "_cairo_scaled_font_text_extents"
  cairo_scaled_font_text_to_glyphs(*scaled_font.cairo_scaled_font_t, x.d, y.d, utf8.p-utf8, utf8_len.l, *glyphs.cairo_glyph_t, *num_glyphs.l, *clusters.cairo_text_cluster_t, *num_clusters.l, *cluster_flags.cairo_text_cluster_flags_t) As "_cairo_scaled_font_text_to_glyphs"
  cairo_select_font_face(*cr.cairo_t, family.s, slant.cairo_font_slant_t, weight.cairo_font_weight_t) As "_cairo_select_font_face"
  cairo_set_antialias(*cr.cairo_t, antialias.cairo_antialias_t) As "_cairo_set_antialias"
  cairo_set_dash(*cr.cairo_t, *dashes, num_dashes.l, offset.d) As "_cairo_set_dash"
  cairo_set_fill_rule(*cr.cairo_t, fill_rule.cairo_fill_rule_t) As "_cairo_set_fill_rule"
  cairo_set_font_face(*cr.cairo_t, *font_face.cairo_font_face_t) As "_cairo_set_font_face"
  cairo_set_font_matrix(*cr.cairo_t, *matrix.cairo_matrix_t) As "_cairo_set_font_matrix"
  cairo_set_font_options(*cr.cairo_t, *options.cairo_font_options_t) As "_cairo_set_font_options"
  cairo_set_font_size(*cr.cairo_t, size.d) As "_cairo_set_font_size"
  cairo_set_line_cap(*cr.cairo_t, line_cap.cairo_line_cap_t) As "_cairo_set_line_cap"
  cairo_set_line_join(*cr.cairo_t, line_join.cairo_line_join_t) As "_cairo_set_line_join"
  cairo_set_line_width(*cr.cairo_t, width.d) As "_cairo_set_line_width"
  cairo_set_matrix(*cr.cairo_t, *matrix.cairo_matrix_t) As "_cairo_set_matrix"
  cairo_set_miter_limit(*cr.cairo_t, limit.d) As "_cairo_set_miter_limit"
  cairo_set_operator(*cr.cairo_t, op.cairo_operator_t) As "_cairo_set_operator"
  cairo_set_scaled_font(*cr.cairo_t, *scaled_font.cairo_scaled_font_t) As "_cairo_set_scaled_font"
  cairo_set_source(*cr.cairo_t, *source.cairo_pattern_t) As "_cairo_set_source"
  cairo_set_source_rgb(*cr.cairo_t, red.d, green.d, blue.d) As "_cairo_set_source_rgb"
  cairo_set_source_rgba(*cr.cairo_t, red.d, green.d, blue.d, alpha.d) As "_cairo_set_source_rgba"
  cairo_set_source_surface(*cr.cairo_t, *surface.cairo_surface_t, x.d, y.d) As "_cairo_set_source_surface"
  cairo_set_tolerance(*cr.cairo_t, tolerance.d) As "_cairo_set_tolerance"
  cairo_set_user_data.cairo_status_t(*cr.cairo_t, *key.cairo_user_data_key_t, *user_data, destroy_cairo_destroy_func_t) As "_cairo_set_user_data"
  cairo_show_glyphs(*cr.cairo_t, *glyphs.cairo_glyph_t, num_glyphs.l) As "_cairo_show_glyphs"
  cairo_show_page(*cr.cairo_t) As "_cairo_show_page"
  cairo_show_text(*cr.cairo_t, utf8.p-utf8) As "_cairo_show_text"
  cairo_show_text_glyphs(*cr.cairo_t, utf8.p-utf8, utf8_len.l, *glyphs.cairo_glyph_t, num_glyphs.l, *clusters.cairo_text_cluster_t, num_clusters.l, cluster_flags.cairo_text_cluster_flags_t) As "_cairo_show_text_glyphs"
  cairo_status(*cr.cairo_t) As "_cairo_status"
  cairo_status_to_string(status.cairo_status_t) As "_cairo_status_to_string"
  cairo_stroke(*cr.cairo_t) As "_cairo_stroke"
  cairo_stroke_extents(*cr.cairo_t, *x1.d, *y1.d, *x2.d, *y2.d) As "_cairo_stroke_extents"
  cairo_stroke_preserve(*cr.cairo_t) As "_cairo_stroke_preserve"
  cairo_surface_copy_page(*surface.cairo_surface_t) As "_cairo_surface_copy_page"
  cairo_surface_create_similar(*other.cairo_surface_t, content.cairo_content_t, width.l, height.l) As "_cairo_surface_create_similar"
  cairo_surface_destroy(*surface.cairo_surface_t) As "_cairo_surface_destroy"
  cairo_surface_finish(*surface.cairo_surface_t) As "_cairo_surface_finish"
  cairo_surface_flush(*surface.cairo_surface_t) As "_cairo_surface_flush"
  cairo_surface_get_content(*surface.cairo_surface_t) As "_cairo_surface_get_content"
  cairo_surface_get_device_offset(*surface.cairo_surface_t, *x_offset.d, *y_offset.d) As "_cairo_surface_get_device_offset"
  cairo_surface_get_fallback_resolution(*surface.cairo_surface_t, *x_pixels_per_inch.d, *y_pixels_per_inch.d) As "_cairo_surface_get_fallback_resolution"
  cairo_surface_get_font_options(*surface.cairo_surface_t, *options.cairo_font_options_t) As "_cairo_surface_get_font_options"
  cairo_surface_get_reference_count(*surface.cairo_surface_t) As "_cairo_surface_get_reference_count"
  cairo_surface_get_type(*surface.cairo_surface_t) As "_cairo_surface_get_type"
  cairo_surface_get_user_data(*surface.cairo_surface_t, *key.cairo_user_data_key_t) As "_cairo_surface_get_user_data"
  cairo_surface_has_show_text_glyphs(*surface.cairo_surface_t) As "_cairo_surface_has_show_text_glyphs"
  cairo_surface_mark_dirty(*surface.cairo_surface_t) As "_cairo_surface_mark_dirty"
  cairo_surface_mark_dirty_rectangle(*surface.cairo_surface_t, x.l, y.l, width.l, height.l) As "_cairo_surface_mark_dirty_rectangle"
  cairo_surface_reference(*surface.cairo_surface_t) As "_cairo_surface_reference"
  cairo_surface_set_device_offset(*surface.cairo_surface_t, x_offset.d, y_offset.d) As "_cairo_surface_set_device_offset"
  cairo_surface_set_fallback_resolution(*surface.cairo_surface_t, x_pixels_per_inch.d, y_pixels_per_inch.d) As "_cairo_surface_set_fallback_resolution"
  cairo_surface_set_user_data(*surface.cairo_surface_t, *key.cairo_user_data_key_t, *user_data, *destroy_fn) As "_cairo_surface_set_user_data"
  ; *destroy_fn.cairo_destroy_func_t
  cairo_surface_show_page(*surface.cairo_surface_t) As "_cairo_surface_show_page"
  cairo_surface_status(*surface.cairo_surface_t) As "_cairo_surface_status"
  CompilerIf #CAIRO_HAS_PNG_FUNCTIONS = #True
    cairo_surface_write_to_png(*surface.cairo_surface_t, filename.s) As "_cairo_surface_write_to_png"
    cairo_surface_write_to_png_stream(*surface.cairo_surface_t, *write_func, *closure) As "_cairo_surface_write_to_png_stream"
    ; *write_func.cairo_write_func_t
  CompilerEndIf
  cairo_svg_get_versions(*versions.cairo_svg_version_t,*num_versions.l) As "_cairo_svg_get_versions"
  cairo_svg_surface_create(filename.s, width_in_points.d, height_in_points.d) As "_cairo_svg_surface_create"
  cairo_svg_surface_create_for_stream(*write_func, *closure, width_in_points.d, height_in_points.d) As "_cairo_svg_surface_create_for_stream"
  ; *write_func.cairo_write_func_t
  cairo_svg_surface_restrict_to_version(*surface.cairo_surface_t, version.cairo_svg_version_t) As "_cairo_svg_surface_restrict_to_version"
  cairo_svg_version_to_string(version.cairo_svg_version_t) As "_cairo_svg_version_to_string"
  cairo_text_cluster_allocate(num_clusters.l) As "_cairo_text_cluster_allocate"
  cairo_text_cluster_free(*clusters.cairo_text_cluster_t) As "_cairo_text_cluster_free"
  cairo_text_extents(*cr.cairo_t, utf8.p-utf8, *extents.cairo_text_extents_t) As "_cairo_text_extents"
  cairo_text_path(*cr.cairo_t, utf8.p-utf8) As "_cairo_text_path"
  cairo_toy_font_face_create(family.s, slant.cairo_font_slant_t, weight.cairo_font_weight_t) As "_cairo_toy_font_face_create"
  cairo_toy_font_face_get_family(*font_face.cairo_font_face_t) As "_cairo_toy_font_face_get_family"
  cairo_toy_font_face_get_slant(*font_face.cairo_font_face_t) As "_cairo_toy_font_face_get_slant"
  cairo_toy_font_face_get_weight(*font_face.cairo_font_face_t) As "_cairo_toy_font_face_get_weight"
  cairo_transform(*cr.cairo_t, *matrix.cairo_matrix_t) As "_cairo_transform"
  cairo_translate(*cr.cairo_t, tx.d, ty.d) As "_cairo_translate"
  cairo_user_font_face_create() As "_cairo_user_font_face_create"
  cairo_user_font_face_get_init_func(*font_face.cairo_font_face_t) As "_cairo_user_font_face_get_init_func"
  cairo_user_font_face_get_render_glyph_func(*font_face.cairo_font_face_t) As "_cairo_user_font_face_get_render_glyph_func"
  cairo_user_font_face_get_text_to_glyphs_func(*font_face.cairo_font_face_t) As "_cairo_user_font_face_get_text_to_glyphs_func"
  cairo_user_font_face_get_unicode_to_glyph_func(*font_face.cairo_font_face_t) As "_cairo_user_font_face_get_unicode_to_glyph_func"
  cairo_user_font_face_set_init_func(*font_face.cairo_font_face_t, *init_func) As "_cairo_user_font_face_set_init_func"
  ; *init_func.cairo_user_scaled_font_init_func_t
  cairo_user_font_face_set_render_glyph_func(*font_face.cairo_font_face_t, *render_glyph_func) As "_cairo_user_font_face_set_render_glyph_func"
  ; *render_glyph_func.cairo_user_scaled_font_render_glyph_func_t
  cairo_user_font_face_set_text_to_glyphs_func(*font_face.cairo_font_face_t, *text_to_glyphs_func) As "_cairo_user_font_face_set_text_to_glyphs_func"
  ; *text_to_glyphs_func.cairo_user_scaled_font_text_to_glyphs_func_t
  cairo_user_font_face_set_unicode_to_glyph_func(*font_face.cairo_font_face_t, *unicode_to_glyph_func) As "_cairo_user_font_face_set_unicode_to_glyph_func"
  ; *unicode_to_glyph_func.cairo_user_scaled_font_unicode_to_glyph_func_t
  cairo_user_to_device(*cr.cairo_t, *x.d, *y.d) As "_cairo_user_to_device"
  cairo_user_to_device_distance(*cr.cairo_t, *dx.d, *dy.d) As "_cairo_user_to_device_distance"
  cairo_version() As "_cairo_version"
  cairo_version_string() As "_cairo_version_string"
  CompilerIf #PB_Compiler_OS = #PB_OS_Windows
    CompilerIf #CAIRO_HAS_WIN32_FONT = #True
      cairo_win32_font_face_create_for_hfont(font.l) As "_cairo_win32_font_face_create_for_hfont"
      cairo_win32_font_face_create_for_logfontw(*logfont.LOGFONTW) As "_cairo_win32_font_face_create_for_logfontw"
      cairo_win32_font_face_create_for_logfontw_hfont(*logfont.LOGFONTW, font.l) As "_cairo_win32_font_face_create_for_logfontw_hfont"
    CompilerEndIf
    cairo_win32_printing_surface_create(hdc.l) As "_cairo_win32_printing_surface_create"
    CompilerIf #CAIRO_HAS_WIN32_FONT = #True
      cairo_win32_scaled_font_done_font(*scaled_font.cairo_scaled_font_t) As "_cairo_win32_scaled_font_done_font"
      cairo_win32_scaled_font_get_device_to_logical(*scaled_font.cairo_scaled_font_t, *device_to_logical.cairo_matrix_t) As "_cairo_win32_scaled_font_get_device_to_logical"
      cairo_win32_scaled_font_get_logical_to_device(*scaled_font.cairo_scaled_font_t, *logical_to_device.cairo_matrix_t) As "_cairo_win32_scaled_font_get_logical_to_device"
      cairo_win32_scaled_font_get_metrics_factor.d(*scaled_font.cairo_scaled_font_t) As "_cairo_win32_scaled_font_get_metrics_factor"
      cairo_win32_scaled_font_select_font(*scaled_font.cairo_scaled_font_t, hdc.l) As "_cairo_win32_scaled_font_select_font"
    CompilerEndIf
    cairo_win32_surface_create(hdc.l) As "_cairo_win32_surface_create"
    cairo_win32_surface_create_with_ddb(hdc.l, format.cairo_format_t, width.l, height.l) As "_cairo_win32_surface_create_with_ddb"
    cairo_win32_surface_create_with_dib(format.cairo_format_t, width.l, height.l) As "_cairo_win32_surface_create_with_dib"
    cairo_win32_surface_get_dc(*surface.cairo_surface_t) As "_cairo_win32_surface_get_dc"
    cairo_win32_surface_get_image(*surface.cairo_surface_t) As "_cairo_win32_surface_get_image"
  CompilerEndIf
EndImport