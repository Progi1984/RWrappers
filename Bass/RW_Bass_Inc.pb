XIncludeFile "RW_Bass_Res.pb"
Import "bass.lib"
  BASS_SetConfig(option.l, value.l) As "_BASS_SetConfig@8"
  BASS_GetConfig(option.l) As "_BASS_GetConfig@4"
  BASS_SetConfigPtr(option.l, *value.l) As "_BASS_SetConfigPtr@8"
  BASS_GetConfigPtr(option.l) As "_BASS_GetConfig@4"
  BASS_GetVersion() As "_BASS_GetVersion@0"
  BASS_GetDeviceInfo(device.l, *info.BASS_DEVICEINFO) As "_BASS_GetDeviceInfo@8"
  BASS_ErrorGetCode() As "_BASS_ErrorGetCode@0"
  BASS_Init(device.l, freq.l, flags.l, win.l, *dsguid.GUID) As "_BASS_Init@20"
  BASS_SetDevice(device.l) As "_BASS_SetDevice@4"
  BASS_GetDevice() As "_BASS_GetDevice@0"
  BASS_Free() As "_BASS_Free@0"
  BASS_GetDSoundObject(object.l) As "_BASS_GetDSoundObject@4"
  BASS_GetInfo(*info.BASS_INFO) As "_BASS_GetInfo@4"
  BASS_Update(length.l) As "_BASS_Update@4"
  BASS_GetCPU() As "_BASS_GetCPU@0"
  BASS_Start() As "_BASS_Start@0"
  BASS_Stop() As "_BASS_Stop@0"
  BASS_Pause() As "_BASS_Pause@0"
  BASS_SetVolume(volume.f) As "_BASS_SetVolume@4"
  BASS_GetVolume.f() As "_BASS_GetVolume@0"
  
  BASS_PluginLoad(file.p-ascii, flags.l) As "_BASS_PluginLoad@8"
  BASS_PluginFree(handle.HPLUGIN) As "_BASS_PluginFree@4"
  BASS_PluginGetInfo(handle.HPLUGIN) As "_BASS_PluginGetInfo@4"
  
  BASS_Set3DFactors(distf.f, rollf.f, doppf.f) As "_BASS_Set3DFactors@12"
  BASS_Get3DFactors(*distf.f, *rollf.f, *doppf.f) As "_BASS_Get3DFactors@12"
  BASS_Set3DPosition(*pos.BASS_3DVECTOR, *vel.BASS_3DVECTOR, *front.BASS_3DVECTOR, *top.BASS_3DVECTOR) As "_BASS_Set3DPosition@16"
  BASS_Get3DPosition(*pos.BASS_3DVECTOR, *vel.BASS_3DVECTOR, *front.BASS_3DVECTOR, *top.BASS_3DVECTOR) As "_BASS_Get3DPosition@16"
  BASS_Apply3D() As "_BASS_Apply3D@0"
  BASS_SetEAXParameters(env.l, vol.f, decay.f, damp.f) As "_BASS_SetEAXParameters@16"
  BASS_GetEAXParameters(*env.l, *vol.f, *decay.f, *damp.f) As "_BASS_GetEAXParameters@16"
  
  BASS_MusicLoad(mem.BOOL, *file, offset.l, length.l, flags.l, freq.l) As "_BASS_MusicLoad@24"
  BASS_MusicFree(handle.HMUSIC) As "_BASS_MusicFree@4"
  
  BASS_SampleLoad(mem.BOOL, *file, offset.l, length.l, max.l, flags.l) As "_BASS_SampleLoad@24"
  BASS_SampleCreate(length.l, freq.l, chans.l, max.l, flags.l) As "_BASS_SampleCreate@20"
  BASS_SampleFree(handle.HSAMPLE) As "_BASS_SampleFree@4"
  BASS_SampleSetData(handle.HSAMPLE, *buffer) As "_BASS_SampleSetData@8"
  BASS_SampleGetData(handle.HSAMPLE, *buffer) As "_BASS_SampleGetData@8"
  BASS_SampleGetInfo(handle.HSAMPLE, *info.BASS_SAMPLE) As "_BASS_SampleGetInfo@8"
  BASS_SampleSetInfo(handle.HSAMPLE, *info.BASS_SAMPLE) As "_BASS_SampleSetInfo@8"
  BASS_SampleGetChannel(handle.HSAMPLE, onlynew.BOOL) As "_BASS_SampleGetChannel@8"
  BASS_SampleGetChannels(handle.HSAMPLE, *channels.HCHANNEL) As "_BASS_SampleGetChannels@8"
  BASS_SampleStop(handle.HSAMPLE) As "_BASS_SampleStop@4"
  
  BASS_StreamCreate(freq.l, chans.l, flags.l, *proc, user.l) As "_BASS_StreamCreate@20"
  BASS_StreamCreateFile(mem.BOOL, *file, offset.l, length.l, flags.l) As "_BASS_StreamCreateFile@20"
  BASS_StreamCreateURL(url.p-ascii, offset.l, flags.l, *proc, user.l) As "_BASS_StreamCreateURL@20"
  BASS_StreamCreateFileUser(buffered.BOOL, flags.l, *proc, user.l) As "_BASS_StreamCreateFileUser@16"
  BASS_StreamFree(handle.HSTREAM) As "_BASS_StreamFree@4"
  BASS_StreamGetFilePosition(handle.HSTREAM, mode.l) As "_BASS_StreamGetFilePosition@8"
  BASS_StreamPutData(handle.HSTREAM, *buffer, length.l) As "_BASS_StreamPutData@12"
  BASS_StreamPutFileData(handle.HSTREAM, *buffer, length.l) As "_BASS_StreamPutFileData@12"
                                                               
  BASS_RecordGetDeviceInfo(device.l, *info.BASS_DEVICEINFO) As "_BASS_RecordGetDeviceInfo@8"
  BASS_RecordInit(device.l) As "_BASS_RecordInit@4"
  BASS_RecordSetDevice(device.l) As "_BASS_RecordSetDevice@4"
  BASS_RecordGetDevice() As "_BASS_RecordGetDevice@0"
  BASS_RecordFree()  As "_BASS_RecordFree@0"
  BASS_RecordGetInfo(*info.BASS_RECORDINFO) As "_BASS_RecordGetInfo@4"
  BASS_RecordGetInputName(input.l) As "_BASS_RecordGetInputName@4"
  BASS_RecordSetInput(input.l, flags.l, volume.f) As "_BASS_RecordSetInput@12"
  BASS_RecordGetInput(input.l, *volume.f) As "_BASS_RecordGetInput@8"
  BASS_RecordStart(freq.l, chans.l, flags.l, *proc, user.l) As "_BASS_RecordStart@20"

  BASS_ChannelBytes2Seconds(handle.l, pos.d) As "_BASS_ChannelBytes2Seconds@12"
  BASS_ChannelSeconds2Bytes(handle.l, pos.d) As "_BASS_ChannelSeconds2Bytes@8"
  BASS_ChannelGetDevice(handle.l) As "_BASS_ChannelGetDevice@4"
  BASS_ChannelSetDevice(handle.l, device.l) As "_BASS_ChannelSetDevice@8"
  BASS_ChannelIsActive(handle.l) As "_BASS_ChannelIsActive@4"
  BASS_ChannelGetInfo(handle.l, *info.BASS_CHANNELINFO) As "_BASS_ChannelGetInfo@8"
  BASS_ChannelGetTags(handle.l, tags.l) As "_BASS_ChannelGetTags@8"
  BASS_ChannelFlags(handle.l, flags.l, mask.l) As "_BASS_ChannelSetFlags@12"
  BASS_ChannelUpdate(handle.l, length.l) As "_BASS_ChannelUpdate@8"
  BASS_ChannelLock(handle.l, lock.l) As "_BASS_ChannelLock@8"
  BASS_ChannelPlay(handle.l, restart.BOOL) As "_BASS_ChannelPlay@8"
  BASS_ChannelStop(handle.l) As "_BASS_ChannelStop@4"
  BASS_ChannelPause(handle.l) As "_BASS_ChannelPause@4"
  BASS_ChannelSetAttribute(handle.l, attrib.l, value.f) As "_BASS_ChannelSetAttribute@12"
  BASS_ChannelGetAttribute(handle.l, attrib.l, *value.f) As "_BASS_ChannelGetAttribute@12"
  BASS_ChannelSlideAttribute(handle.l, attrib.l, value.f, time.l) As "_BASS_ChannelSlideAttribute@16"
  BASS_ChannelIsSliding(handle.l, attrib.l) As "_BASS_ChannelIsSliding@8"
  BASS_ChannelSet3DAttributes(handle.l, mode.l, min.f, max.f, iangle.l, oangle.l, outvol.l) As "_BASS_ChannelSet3DAttributes@28"
  BASS_ChannelGet3DAttributes(handle.l, *mode.l, *min.f, *max.f, *iangle.l, *oangle.l, *outvol.l) As "_BASS_ChannelGet3DAttributes@28"
  BASS_ChannelSet3DPosition(handle.l, *pos.BASS_3DVECTOR, *orient.BASS_3DVECTOR, *vel.BASS_3DVECTOR) As "_BASS_ChannelSet3DPosition@16"
  BASS_ChannelGet3DPosition(handle.l, *pos.BASS_3DVECTOR, *orient.BASS_3DVECTOR, *vel.BASS_3DVECTOR) As "_BASS_ChannelGet3DPosition@16"
  BASS_ChannelGetLength(handle.l, mode.l) As "_BASS_ChannelGetLength@8"
  BASS_ChannelSetPosition(handle.l, pos.l, mode.l) As "_BASS_ChannelSetPosition@12"
  BASS_ChannelGetPosition(handle.l, mode.l) As "_BASS_ChannelGetPosition@4"
  BASS_ChannelGetLevel(handle.l) As "_BASS_ChannelGetLevel@4"
  BASS_ChannelGetData(handle.l, *buffer, length.l) As "_BASS_ChannelGetData@12"
  BASS_ChannelSetSync(handle.l, type.l, param.l, *proc, user.l) As "_BASS_ChannelSetSync@24"
  BASS_ChannelRemoveSync(handle.l, sync.HSYNC) As "_BASS_ChannelRemoveSync@8"
  BASS_ChannelSetDSP(handle.l, *proc, user.l, priority.l) As "_BASS_ChannelSetDSP@16"
  BASS_ChannelRemoveDSP(handle.l, dsp.HDSP) As "_BASS_ChannelRemoveDSP@8"
  BASS_ChannelSetLink(handle.l, chan.l) As "_BASS_ChannelSetLink@8"
  BASS_ChannelRemoveLink(handle.l, chan.l) As "_BASS_ChannelRemoveLink@8"
  BASS_ChannelSetFX(handle.l, type.l, priority.l) As "_BASS_ChannelSetFX@12"
  BASS_ChannelRemoveFX(handle.l, fx.HFX) As "_BASS_ChannelRemoveFX@8"
  
  BASS_FXSetParameters(handle.HFX, *par) As "_BASS_FXSetParameters@8"
  BASS_FXGetParameters(handle.HFX, *par) As "_BASS_FXGetParameters@8"
  BASS_FXReset(handle.HFX) As "_BASS_FXReset@4"
EndImport

; IDE Options = PureBasic 4.20 (Windows - x86)
; CursorPosition = 108
; FirstLine = 65
; Folding = -